[tool.black]

line-length = 100

[tool.pylint.messages_control]

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once). You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable=all --enable=classes
# --disable=W".
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    # messages after here are added for this project
    "missing-docstring",
    "logging-fstring-interpolation",
    "arguments-differ",
    "no-member",
]


[tool.pylint.format]

# Maximum number of characters on a single line.
max-line-length = 100

# Maximum number of lines in a module.
max-module-lines = 1000

# Allow the body of a class to be on the same line as the declaration if body
# contains single statement.
single-line-class-stmt = "no"

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt = "no"


[tool.pylint.similarities]

# Ignore imports when computing similarities.
ignore-imports = "yes"


[tool.pylint.basic]

# Naming style matching correct argument names.
argument-naming-style = "snake_case"

# Naming style matching correct attribute names.
attr-naming-style = "snake_case"

# Naming style matching correct class attribute names.
class-attribute-naming-style = "snake_case"

# Naming style matching correct class names.
class-naming-style = "PascalCase"

# Naming style matching correct constant names.
const-naming-style = "UPPER_CASE"

# Naming style matching correct function names.
function-naming-style = "snake_case"

# Good variable names which should always be accepted, separated by a comma.
good-names = [
    "i",
    "j",
    "k",
    "ex",
    "Run",
    "_",  # items after this are added for this project
    "f",  # for file
    "fp",  # for file path
    "x", "y",  # for co-ordinates and input/label for models
    "b", "a",  # for signal filter numerator and denominator
    "k", "v",  # key, value when iterating over a dict
    "fs",  # normalized frequency in DSP things
    "df",
    "t0", "t1",  # for start/end times
    "lr",  # for learning rate
    "x1", "x2",  # two arbitrary data arrays
    "ds", "md", "tz",  # for dataset, metadata, timezone
]

# Naming style matching correct method names.
method-naming-style = "snake_case"

# Naming style matching correct module names.
module-naming-style = "snake_case"

# Naming style matching correct variable names.
variable-naming-style = "snake_case"


[tool.pylint.design]

# Maximum number of arguments for function / method.
max-args = 8

# Maximum number of attributes for a class (see R0902).
max-attributes = 7

# Maximum number of boolean expressions in an if statement.
max-bool-expr = 5

# Maximum number of branch for function / method body.
max-branches = 12

# Maximum number of locals for function / method body.
max-locals = 15

# Maximum number of parents for a class (see R0901).
max-parents = 7

# Maximum number of public methods for a class (see R0904).
max-public-methods = 20

# Maximum number of return / yield for function / method body.
max-returns = 6

# Maximum number of statements in function / method body.
max-statements = 50

# Minimum number of public methods for a class (see R0903).
min-public-methods = 0


[tool.bumpver]
current_version = "0.7.0"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
]
"setup.py" = [
    "{version}",
    "{pep440_version}",
]
"README.md" = [
    "{version}",
    "{pep440_version}",
]

